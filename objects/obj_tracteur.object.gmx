<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tracteur</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>300</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_vaisseau.buffer_ralentisseur+=1 //buffer_ralentisseur correspond au nombre de rayons que subit le joueur, tant qu'il est != 0 le ralentisseur ne se rétablira pas à sa valeur initiale 1

parent=collision_point(x,y,obj_ennemy,0,1)

parent_destroy=0

D=distance_to_point(global.xvaisseau, global.yvaisseau)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>D=point_distance(x,y,global.xvaisseau, global.yvaisseau)


if parent_destroy==0
{

    x=parent.x
    y=parent.y


    image_angle=point_direction(x,y,global.xvaisseau,global.yvaisseau)
    image_xscale=D/100 // Distance par rapport au joueur / longueur du sprite

    if parent.rayon_tracteur==0 //Le joueur est trop loin du vaisseau donc le vaisseau ne lance plus son rayon tracteur donc le rayon est détruit
    {
        obj_vaisseau.buffer_ralentisseur-=1;
        instance_destroy()
    }

}

else {obj_vaisseau.buffer_ralentisseur-=1 ; instance_destroy()} //La variable parent_destroy prend la valeur 1 quand le vaisseau ennemi à l'origine du rayon est détruit (cf. obj_ennemy)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,10</point>
    <point>125,125</point>
  </PhysicsShapePoints>
</object>
