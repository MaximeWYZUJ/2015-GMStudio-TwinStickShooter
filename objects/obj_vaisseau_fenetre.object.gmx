<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_vaisseau_fenetre</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_interface</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0
image_index=1

destroy=0
actif=0 //remplace planete.select dans le cas où il n'y a pas d'échange avec une planete
page=1// 0=JDB (JournalDeBord), 1=vaisseau
transparence=0.9

planete=instance_nearest(x,y,obj_planete)
JDB_selection=1


//===Soute===
TOTAL_marchandise = obj_vaisseau.QTT_drogue[1] + obj_vaisseau.QTT_drogue[2] + obj_vaisseau.QTT_drogue[3] + obj_vaisseau.QTT_drogue[4]


scr_create_soute()
/*if TOTAL_marchandise&gt;0
{
    instance_create(x+42, y+375, obj_outil_selection_soute)
    
    for(b=0; b&lt;5; b+=1) //On génère les obj_drogue présents dans la soute lors de la création de l'interface sous forme de tableau (array 2D -&gt; soute[a,b])
    {
        for(a=0; a&lt;7; a+=1)
        {
            caisse=instance_create(x+42+a*75, y+375-b*75, obj_drogue)
            soute[a,b] = caisse
            
            if b*7+a&lt;obj_vaisseau.QTT_drogue[1]
            {caisse.image_index=1}
            
            else if b*7+a&lt;obj_vaisseau.QTT_drogue[1] + obj_vaisseau.QTT_drogue[2]
                {caisse.image_index=2}
                
                else if b*7+a&lt;obj_vaisseau.QTT_drogue[1] + obj_vaisseau.QTT_drogue[2] + obj_vaisseau.QTT_drogue[3]
                    {caisse.image_index=3}
                    
                    else if b*7+a&lt;TOTAL_marchandise
                        {caisse.image_index=4}
                        
                        else caisse.image_index=0
        }
    }
}



/*
Cette fenetre doit représenter le vaisseau dans son intégralité
il faut que le joueur puisse voir/agir sur la soute
modifier son armement
voir son équipage et son journal de bord (missions)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_vaisseau.commerce==1
{
    if obj_planete_fenetre.sprite_index!=spr_planete_achat
    instance_destroy()
}
else
{
    x=view_xview[0]+374
    y=view_yview[0]+108
    
    xancrage=374
    yancrage=108
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy==1
{instance_destroy()}


//=== Fenetre du vaisseau dans le cas d'un échange avec une planète ===
if obj_vaisseau.commerce==1
{
//=== Position de la fenetre ===
x=view_xview[0]+592
y=view_yview[0]+108
    
actif=0
depth=-1

if planete.select==1
{transparence=0.9}
else {transparence=0.7 /*; if instance_number(obj_drogue)&gt;0 {obj_drogue.image_alpha=0.7} ; if instance_number(obj_outil_selection_soute)&gt;0 {obj_outil_selection_soute.image_alpha=0.9}*/}


TOTAL_marchandise = obj_vaisseau.QTT_drogue[1] + obj_vaisseau.QTT_drogue[2] + obj_vaisseau.QTT_drogue[3] + obj_vaisseau.QTT_drogue[4]
compteur=0

if planete.select==0 //Onglet d'achat (planete) sélectionné
{
    if obj_planete_fenetre.sprite_index==spr_planete_achat
    {
        if gamepad_button_check_released(0, gp_face1)
        {
            switch(obj_outil_selection_achat.position)
                {
                    case 0 : {if planete.QTT_drogue[planete.drogue[1]]&gt;0 &amp;&amp; obj_vaisseau.fuel&gt;=planete.PRIX_drogue[planete.drogue[1]]
                                {
                                    while compteur&lt;35
                                    {
                                        a = compteur mod 7
                                        b = compteur div 7
                                        
                                        if soute[a,b].image_index==0
                                            {soute[a,b].image_index = planete.drogue[1] ; break}
                                        else compteur+=1
                                    }
                                }}
                    break;
                    
                    case 1 : {if planete.QTT_drogue[planete.drogue[2]]&gt;0 &amp;&amp; obj_vaisseau.fuel&gt;=planete.PRIX_drogue[planete.drogue[2]]
                                {
                                    while compteur&lt;35
                                    {
                                        a = compteur mod 7
                                        b = compteur div 7
                                        
                                        if soute[a,b].image_index==0
                                            {soute[a,b].image_index = planete.drogue[2] ; break}
                                        else compteur+=1
                                    }
                                }}
                    break;
                    
                    case 2 : {if planete.QTT_drogue[planete.drogue[3]]&gt;0 &amp;&amp; obj_vaisseau.fuel&gt;=planete.PRIX_drogue[planete.drogue[3]]
                                {
                                    while compteur&lt;35
                                    {
                                        a = compteur mod 7
                                        b = compteur div 7
                                        
                                        if soute[a,b].image_index==0
                                            {soute[a,b].image_index = planete.drogue[3] ; break}
                                        else compteur+=1
                                    }
                                }}
                    break;
                    
                    case 3 : {if planete.QTT_drogue[planete.drogue[4]]&gt;0 &amp;&amp; obj_vaisseau.fuel&gt;=planete.PRIX_drogue[planete.drogue[4]]
                                {
                                    while compteur&lt;35
                                    {
                                        a = compteur mod 7
                                        b = compteur div 7
                                        
                                        if soute[a,b].image_index==0
                                            {soute[a,b].image_index = planete.drogue[4] ; break}
                                        else compteur+=1
                                    }
                                }}
                    break;
                }
        }
    }
}

}
else //obj_vaisseau.commerce==0
{
    actif=1 //la fenetre est toujours active, vu qu'il n'y a pas d'échange
    depth=100
    transparence=0.7
    
    //=== Fenetre du vaisseau dans d'autres cas q'un échange avec une planète ===
    switch(page)
    {
        case 0 : //JDB
        {
            if gamepad_button_check(0, gp_shoulderr)
            {page+=1 ; scr_create_soute()}
        }
        break;
        
        case 1 : //vue du vaisseau
        {
            if gamepad_button_check(0, gp_shoulderl)
            {page-=1 ; scr_destroy(obj_drogue, obj_outil_selection_soute)}
        }
        break;
    }

    //=== Journal de bord ===
/*Le journal de bord permet de voir les missions en cours (de les rendre actives ou passives, le descriptif de mission, voir les objectifs, etc)
Il permet aussi de voir l'activité du vaisseau (ceux que font les membres d'équipage, leur moral, gérer leur salaire, etc.) et de savoir si un membre cherche à nous parler.
Si l'on ouvre l'interface du vaisseau (même si l'on n'est pas sur la page du vaisseau), Spark nous notifie les informations essentielles à savoir, pour que le joueur pense à prendre soin de son équipage.
Si rien ne se passe au niveau de l'activité du vaisseau, Spark indique les objectifs en cours.*/
    





}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Sélection de la mission dans l'historique
if JDB_selection&gt;1
{if gamepad_button_check_released(0, gp_padu)
JDB_selection-=1}

if JDB_selection&lt;obj_reference.rang-1
{if gamepad_button_check_released(0, gp_padd)
JDB_selection+=1}


if actif==1 &amp;&amp; page==0
{   //affichage de l'historique des missions (a gauche)
    if JDB_selection&lt;=3 //début de l'historique
    {buffer_i=1}
    else if JDB_selection+3&gt;obj_reference.rang-1
         {buffer_i=obj_reference.rang-5}
         else buffer_i=JDB_selection-2
    
    for(i=0; i&lt;5; i+=1) //i&lt;=nb de missions affichées
    {
        if i+buffer_i&lt;obj_reference.rang
        draw_text_ext(xancrage+200, yancrage+150+50*i, string(obj_reference.NB_missions[i+buffer_i, 2]), 20, 200)
    }
    
    draw_text(xancrage+170, yancrage+150+50*(JDB_selection-buffer_i), string("=&gt;"))
    
    draw_text_ext(xancrage+600, yancrage+200, string((obj_reference.NB_missions[JDB_selection,0]).JDB_objectif[(obj_reference.NB_missions[JDB_selection,0]).phase]), 20, 336) //objectif
    draw_text_ext(xancrage+200, yancrage+600, string((obj_reference.NB_missions[JDB_selection,0]).JDB_descriptif), 40, 736) //descriptif

    draw_text(xancrage+20, yancrage+20, string(obj_reference.rang))
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_vaisseau.commerce==0
    {draw_sprite_ext(spr_vaisseau_fenetre, 1, view_xview[0]+374, view_yview[0]+108, 1, 1, 0, c_white, transparence)}
else draw_sprite_ext(spr_vaisseau_fenetre, 1, view_xview[0]+592, view_yview[0]+108, 1, 1, 0, c_white, transparence)



image_alpha=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>250,250</point>
  </PhysicsShapePoints>
</object>
